<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
  <title>Profils √©tudiants</title>
  <link rel="stylesheet" href="styles.css" />
</head>
<body>
  <%- include('partials/header') %>

  <p class="slogan">D√©couvre les profils d'√©tudiants qui proposent leurs services !</p>

  <main>
    <h1 id="titreCategorie">Profils √©tudiants disponibles toutes cat√©gories confondues</h1>
    <div class="search-bar">
      <input 
        type="search" 
        id="searchProfiles" 
        placeholder="Rechercher un profil par nom ou comp√©tence..." 
        aria-label="Recherche parmi les profils √©tudiants"
        autocomplete="off"
      />
    </div>

    <section id="profilContainer" class="grid-container" aria-live="polite" aria-relevant="additions removals">
      <!-- Profils inject√©s ici -->
      <% propositions.forEach(function(prop) { %>
        <div class="service-card">
          <h3><%= prop.titre %></h3>
          <p><b>Cat√©gorie :</b> <%= prop.categorie %></p>
          <p><b>Description :</b> <%= prop.description %></p>
          <p><b>Contact :</b> <%= prop.contact %></p>
          <p><b>Propos√© par :</b> <%= prop.nom %> (<%= prop.email %>)</p>
        </div>
      <% }) %>
    </section>
  </main>

  <%- include('partials/footer') %>

  <!-- Modale contact, cach√©e par d√©faut -->
  <div id="contactModal" tabindex="-1" aria-modal="true" role="dialog" aria-labelledby="modalTitle" class="hidden">
    <div class="modal-content" role="document" style="
      background: var(--clr-card-light);
      padding: 2rem;
      border-radius: 12px;
      max-width: 320px;
      box-shadow: 0 6px 20px rgba(0,0,0,0.3);
      text-align: center;
      color: var(--clr-text-light);
    ">
      <h2 id="modalTitle" style="margin-bottom: 1rem;">Contactez via :</h2>
      <a id="contactWhatsapp" href="#" target="_blank" rel="noopener" class="btn" style="margin-bottom: 1rem; display: inline-block; width: 100%;">WhatsApp</a>
      <a id="contactGmail" href="#" target="_blank" rel="noopener" class="btn" style="display: inline-block; width: 100%;">Gmail</a>
      <button id="closeModal" class="btn" style="margin-top: 1.5rem; background: #e94e77;">Fermer</button>
    </div>
  </div>

  <style>
    /* Modale cach√©e par d√©faut */
    #contactModal {
      display: none;
      position: fixed;
      top: 0; left: 0; right: 0; bottom: 0;
      background: rgba(0,0,0,0.6);
      justify-content: center;
      align-items: center;
      z-index: 9999;
      outline: none;
    }
    #contactModal.active {
      display: flex;
    }

    /* Pour adapter modale en mode sombre */
    body.dark-mode #contactModal .modal-content {
      background: var(--clr-card-dark);
      color: var(--clr-text-dark);
    }
  </style>

  <script>
    // Profils √©tudiants (exemple)
    /*const profils = {
      cours: [
        { nom: "Halvin L.", competence: "Math√©matiques, Physique", dispo: "Mercredi apr√®s-midi", niveau: "L2", email: "halvinlukawu011@gmail.com", tel: "+243854526336" },
        { nom: "Imelda M.", competence: "Anglais, EOE", dispo: "Week-end", niveau: "L1", email: "imeldamasidakakudji@gmail.com", tel: "+243902478879" }
      ],
      depannage: [
        { nom: "Marc T.", competence: "Nettoyage logiciel, R√©installation Windows", dispo: "Tous les jours", niveau: "L4", email: "marc.t@email.com", tel: "+33712349876" },
        { nom: "Sarah B.", competence: "Mac et PC, s√©curit√©", dispo: "Lundi au jeudi", niveau: "L2", email: "sarah.b@email.com", tel: "+33798761234" }
      ],
      design: [
        { nom: "Clara G.", competence: "Logos, Affiches", dispo: "Flexible", niveau: "L4", email: "clara.g@email.com", tel: "+33511223344" },
        { nom: "Kevin A.", competence: "UX/UI, CV Design", dispo: "Week-end", niveau: "L3", email: "kevin.a@email.com", tel: "+33544332211" }
      ],
      traduction: [
        { nom: "Elie Z.", competence: "Anglais ‚Üí Fran√ßais, Relecture acad√©mique", dispo: "Tous les Mercredi", niveau: "L3", email: "elie.z@email.com", tel: "+33455667788" },
        { nom: "Nadine P.", competence: "CV & lettres de motivation", dispo: "Mardi et jeudi", niveau: "L2", email: "nadine.p@email.com", tel: "+33488776655" }
      ]
    }; */

    const titresCategories = {
      cours: "üìò Cours particuliers",
      depannage: "üõ†Ô∏è D√©pannage informatique",
      design: "üé® Design graphique",
      traduction: "üí¨ Traduction & relecture"
    };

    const params = new URLSearchParams(window.location.search);
    const categorie = params.get("categorie");

    const container = document.getElementById("profilContainer");
    const titre = document.getElementById("titreCategorie");
    const searchInput = document.getElementById("searchProfiles");

    function getProfils() {
      let profilsCategorie = [];

      if (categorie) {
        profilsCategorie = [...(profils[categorie] || [])];
        const profilsAjoutes = JSON.parse(localStorage.getItem(categorie)) || [];
        profilsCategorie = profilsCategorie.concat(profilsAjoutes);
        titre.textContent = titresCategories[categorie] || "Profils √©tudiants";
      } else {
        for (let cat in profils) {
          profilsCategorie = profilsCategorie.concat(profils[cat]);
        }
        const allKeys = Object.keys(profils);
        allKeys.forEach(key => {
          const enregistre = JSON.parse(localStorage.getItem(key)) || [];
          profilsCategorie = profilsCategorie.concat(enregistre);
        });
        titre.textContent = "Tous les profils √©tudiants disponibles (toutes cat√©gories)";
      }
      return profilsCategorie;
    }

    function afficherProfils(profilsListe) {
      container.innerHTML = "";

      if (profilsListe.length === 0) {
        container.innerHTML = "<p style='text-align:center;'>D√©sol√©, aucun profil ne correspond √† votre recherche.</p>";
        return;
      }

      profilsListe.forEach(profil => {
        const card = document.createElement("article");
        card.className = "service-card";

        // Le bouton contacter avec data-email et data-tel pour r√©cup√©rer infos
        card.innerHTML = `
          <h2>${profil.nom}</h2>
          <p><strong>Comp√©tences :</strong> ${profil.competence}</p>
          <p><strong>Disponibilit√© :</strong> ${profil.dispo}</p>
          <p><strong>Niveau :</strong> ${profil.niveau || 'Non pr√©cis√©'}</p>
          <div class="btn-container">
            <button class="btn contact-btn" data-email="${profil.email}" data-tel="${profil.tel}">Contacter</button>
          </div>
        `;
        container.appendChild(card);
      });
    }

    function filtrerProfils(profilsListe, recherche) {
      if (!recherche) return profilsListe;
      recherche = recherche.toLowerCase();
      return profilsListe.filter(profil => {
        const nom = profil.nom.toLowerCase();
        const comp = profil.competence.toLowerCase();
        return nom.includes(recherche) || comp.includes(recherche);
      });
    }

    // Affichage initial des profils
    let profilsAffiches = getProfils();
    afficherProfils(profilsAffiches);

    // Filtrage en live
    searchInput.addEventListener("input", e => {
      const filtered = filtrerProfils(profilsAffiches, e.target.value);
      afficherProfils(filtered);
    });

    // Gestion modale contact
    const contactModal = document.getElementById("contactModal");
    const closeModalBtn = document.getElementById("closeModal");
    const contactWhatsapp = document.getElementById("contactWhatsapp");
    const contactGmail = document.getElementById("contactGmail");

    document.addEventListener("click", e => {
      if (e.target.classList.contains("contact-btn")) {
        const email = e.target.dataset.email;
        const tel = e.target.dataset.tel;

        // G√©n√©ration liens contact
        contactWhatsapp.href = `https://api.whatsapp.com/send?phone=${encodeURIComponent(tel)}&text=${encodeURIComponent("Bonjour, je vous contacte via ChouAide.")}`;
        contactGmail.href = `mailto:${encodeURIComponent(email)}?subject=${encodeURIComponent("Demande de contact via ChouAide")}&body=${encodeURIComponent("Bonjour,\n\nJe vous contacte √† propos de vos services.")}`;

        contactModal.classList.add("active");
        contactModal.focus();
      }

      if (e.target === closeModalBtn || e.target === contactModal) {
        contactModal.classList.remove("active");
      }
    });

    // Mode sombre toggle
    const darkToggle = document.querySelector(".dark-mode-toggle");
    darkToggle.addEventListener("click", () => {
      document.body.classList.toggle("dark-mode");
      // Stocker la pr√©f√©rence utilisateur
      if (document.body.classList.contains("dark-mode")) {
        localStorage.setItem("darkMode", "enabled");
      } else {
        localStorage.setItem("darkMode", "disabled");
      }
    });

    // Charger pr√©f√©rence mode sombre au chargement
    window.addEventListener("DOMContentLoaded", () => {
      if (localStorage.getItem("darkMode") === "enabled") {
        document.body.classList.add("dark-mode");
      }
    });
  </script>
</body>
</html>